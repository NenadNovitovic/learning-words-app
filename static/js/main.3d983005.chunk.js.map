{"version":3,"sources":["ChooseLanguage.js","SpecificLetters.js","WordCheck.js","App.js","index.js"],"names":["ChooseLanguage","mainLang","setMainLang","transLang","setTransLang","useState","showMainLangOptions","setShowMainLangOptions","showTransLangOptions","setShowTransLangOptions","changeLanguage","e","target","name","value","onClick","isOpened","onChange","id","type","defaultChecked","SpecificLetters","textField","writeChar","current","textContent","focus","WordCheck","shuffleArray","words","map","word","idx","swe","eng","srb","wordsList","setWordsList","wordIndex","setWordIndex","correctWordsCounter","setCorrectWordsCounter","wrongWordsCounter","setWrongWordsCounter","outputMessage","setOutputMessage","inputWordField","useRef","inputArray","array","i","length","j","Math","floor","random","className","onSubmit","preventDefault","inputWord","toLowerCase","trim","find","autoFocus","ref","App","mainLanguage","setMainLanguage","translatedLanguage","setTranslatedLanguage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d983005.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport {Collapse} from 'react-collapse'\r\n\r\nexport default function ChooseLanguage({mainLang,setMainLang,transLang,setTransLang}) {\r\n\r\n    const [showMainLangOptions,setShowMainLangOptions] = useState(true)\r\n    const [showTransLangOptions, setShowTransLangOptions] = useState(true)\r\n\r\n    function changeLanguage(e){\r\n        if(e.target.name===\"mainLang\"){\r\n            setMainLang(e.target.value);\r\n            setShowMainLangOptions(!showMainLangOptions);\r\n        }else{\r\n            setTransLang(e.target.value);\r\n            setShowTransLangOptions(!showTransLangOptions);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <span>Translate from:</span>\r\n            <button onClick={()=>{\r\n                setShowMainLangOptions(!showMainLangOptions);\r\n            }}>{mainLang}</button>\r\n            <Collapse isOpened={showMainLangOptions}>\r\n                <fieldset onChange={changeLanguage} id=\"mainLang\">\r\n                    <span>English <input type=\"radio\" value=\"eng\" name=\"mainLang\"/></span>\r\n                    <span>Swedish <input defaultChecked type=\"radio\" value=\"swe\" name=\"mainLang\"/></span>\r\n                    <span>Serbian <input type=\"radio\" value=\"srb\" name=\"mainLang\"/></span>\r\n                </fieldset>\r\n            </Collapse>\r\n            <span>Translate to:</span>\r\n            <button onClick={()=>{\r\n                setShowTransLangOptions(!showTransLangOptions);\r\n            }}>{transLang}</button>\r\n            <Collapse isOpened={showTransLangOptions}>\r\n            <fieldset onChange={changeLanguage} id=\"transLang\">\r\n                <span>English <input defaultChecked type=\"radio\" value=\"eng\" name=\"transLang\"/></span>\r\n                <span>Swedish <input type=\"radio\" value=\"swe\" name=\"transLang\"/></span>\r\n                <span>Serbian <input type=\"radio\" value=\"srb\" name=\"transLang\"/></span>\r\n            </fieldset>\r\n            </Collapse>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SpecificLetters( {transLang, textField} ) {\r\n\r\n    function swedishCharacters(){\r\n        return  <div>\r\n                    <button onClick={writeChar}>å</button>\r\n                    <button onClick={writeChar}>ä</button>\r\n                    <button onClick={writeChar}>ö</button>\r\n                </div>\r\n    }\r\n    function serbianCharacters(){\r\n        return  <div>\r\n                    <button onClick={writeChar}>đ</button>\r\n                    <button onClick={writeChar}>ž</button>\r\n                    <button onClick={writeChar}>ć</button>\r\n                    <button onClick={writeChar}>č</button>\r\n                    <button onClick={writeChar}>š</button>\r\n                </div>\r\n    }\r\n\r\n    function writeChar(e){\r\n        textField.current.value = textField.current.value + e.target.textContent;\r\n        textField.current.focus();\r\n    }\r\n\r\n\r\n    function renderCharacters(){\r\n        if(transLang===\"swe\"){\r\n            return swedishCharacters();\r\n        }else if(transLang===\"srb\"){\r\n            return serbianCharacters();\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {renderCharacters()}\r\n        </div>\r\n    )\r\n}\r\n","import words from './wordsdata.json'\r\nimport React, { useState,useRef } from 'react'\r\nimport SpecificLetters from './SpecificLetters'\r\n\r\nexport default function WordCheck( {mainLang, transLang} ) {\r\n    const [wordsList , setWordsList] = useState(\r\n        shuffleArray( words.map( ( word,idx ) => {\r\n        return {\r\n            id:idx,\r\n            swe:word.swe,\r\n            eng:word.eng,\r\n            srb:word.srb\r\n        }\r\n        }))\r\n    )\r\n    const [wordIndex, setWordIndex] = useState(0)\r\n    const [correctWordsCounter, setCorrectWordsCounter] = useState(0)\r\n    const [wrongWordsCounter, setWrongWordsCounter] = useState(0)\r\n    const [outputMessage, setOutputMessage] = useState()\r\n    const inputWordField = useRef();\r\n    \r\n    function shuffleArray(inputArray) {\r\n        let array = inputArray;\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return inputArray;\r\n    }\r\n\r\n    function checkWord(e){\r\n        e.preventDefault();\r\n\r\n        var inputWord = inputWordField.current.value.toLowerCase().trim();\r\n        if(wordsList.find(word=>{\r\n          return word[transLang].toLowerCase()===inputWord;\r\n        })){\r\n            setCorrectWordsCounter(correctWordsCounter+1);\r\n            setOutputMessage(\"Correct!\");\r\n        }else{\r\n          setWrongWordsCounter(wrongWordsCounter+1);\r\n          setOutputMessage(\"Wrong! Correct translation was: \" + wordsList[wordIndex][transLang]);\r\n        }\r\n        if(wordIndex+1>=wordsList.length){\r\n            setWordsList(shuffleArray(wordsList));\r\n            setWordIndex(0)\r\n        }else{\r\n            setWordIndex(wordIndex+1);\r\n        }\r\n        inputWordField.current.value=\"\";\r\n      }\r\n\r\n    return (\r\n        <div className=\"checkContainer\">\r\n            <h1>Translate the word </h1>\r\n            <span className=\"wordSpan\"> {wordsList[wordIndex][mainLang]}</span>\r\n            <form onSubmit={checkWord}>\r\n                <input autoFocus ref={inputWordField} type=\"text\"/>\r\n            </form>\r\n            <SpecificLetters transLang={transLang} textField={inputWordField}/>\r\n            {outputMessage}\r\n            <div>Correct words:{correctWordsCounter}</div>\r\n            <div>Wrong words:{wrongWordsCounter} </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport ChooseLanguage from './ChooseLanguage';\r\nimport WordCheck from './WordCheck'\r\n\r\nfunction App() {\r\n  const [mainLanguage, setMainLanguage] = useState(\"swe\");\r\n  const [translatedLanguage, setTranslatedLanguage] = useState(\"eng\");\r\n\r\n  return (\r\n      <div className=\"container\">\r\n        <ChooseLanguage mainLang={mainLanguage} setMainLang={setMainLanguage} transLang={translatedLanguage} setTransLang={setTranslatedLanguage}/>\r\n        <WordCheck mainLang={mainLanguage} transLang={translatedLanguage}/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n/**/","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}